#!/usr/bin/env ruby

require 'sinatra'
require 'haml'
require 'sequel'
require 'distro-package'
require 'package-updater'


db_path = './db.sqlite'
DB = Sequel.sqlite(db_path)
DistroPackage::DB = DB

helpers do

  def fetch_coverage
    DB[:estimated_coverage].all.each_with_object({}){ |c, coverage| coverage[c[:pkg_attr]] = c[:coverage] }
  end

  def coverage
    @coverage = fetch_coverage unless @coverage
    @coverage
  end

  def coverage_stats
    coverage.values.each_with_object(Hash.new(0)){ |c, cstat| cstat[c] += 1 }
  end

  def maintainer_stats
    DistroPackage::Nix.packages.
      each_with_object(Hash.new(0)){ |pkg, mstat| mstat[pkg.maintainer_count] += 1 }
  end

  def fetch_outdated
    outdated = Hash.new{|h,k| h[k] = Hash.new}
    PackageUpdater::Updaters.each do |updater|
      DB[updater.friendly_name].all.each do |row|

        outdated[row[:pkg_attr]][row[:version]] = [] unless outdated[row[:pkg_attr]][row[:version]]
        outdated[row[:pkg_attr]][row[:version]] << updater.friendly_name.to_s
        puts row[:pkg_attr]
        puts row[:version]
        outdated[row[:pkg_attr]][row[:version]]

      end
    end
    return outdated
  end

  def outdated
    @outdated = fetch_outdated unless @outdated
    @outdated
  end

end


get '/' do
  coverage_report = coverage_stats.sort_by{|cnum, ccnt| cnum}.reduce("") do |r, cs|
    r += "<tr><td>#{cs[0]}</td><td><a href=/coverage?c=#{cs[0]}>#{cs[1]}</a></td></tr>"
  end

  maintainer_report = maintainer_stats.sort_by{ |mnum, pcnt| mnum}.reduce("") do |r, ms|
    r += "<tr><td>#{ms[0]}</td><td><a href=/coverage?mc=#{ms[0]}>#{ms[1]}</a></td></tr>"
  end

  needsattention_report = "<tr><td>Vulnerable</td><td></td></tr>" +
      "<tr><td>Unmaintained not covered</td><td><a href=/coverage?mc=0&c=0>#{
        coverage.keys.select{ |pkg| coverage[pkg] == 0 }.
          count{ |pkg| DistroPackage::Nix.by_internal_name[pkg].maintainer_count ==0 }
      }</a></td></tr>" +
      "<tr><td>Outdated unmaintained</td><td><a href=/outdated?mc=0>#{
        outdated.keys.count{|pkg| DistroPackage::Nix.by_internal_name[pkg].maintainer_count ==0 }
      }</a></td></tr>" +
      "<tr><td>Outdated</td><td><a href=/outdated>#{outdated.count}</a></td></tr>"

  haml :dashboard, :locals => {
    :coverage_report => coverage_report,
    :maintainer_report => maintainer_report,
    :needsattention_report => needsattention_report
  }
end


get '/coverage' do
  report = coverage.
    sort_by{ |pkg, c| c }.
    select{ |pkg, c| (not params[:c] or params[:c].to_i == c)  and (not params[:mc] or params[:mc].to_i == DistroPackage::Nix.by_internal_name[pkg].maintainer_count)}.
    reduce(""){ |r, pkg| r += "<tr><td>#{pkg[0]}</td><td>#{pkg[1]}</td><td>#{DistroPackage::Nix.by_internal_name[pkg[0]].maintainer_count}</td></tr>" }

  haml :coverage, :locals => { :coverage_report => report }
end

get '/outdated' do
  report = outdated.
    sort_by{ |pkg, v| pkg }.
    select{ |pkg, v| not params[:mc] or params[:mc].to_i == DistroPackage::Nix.by_internal_name[pkg].maintainer_count }.
    reduce(""){ |r, pkg| r+= "<tr><td>#{pkg[0]}</td><td>#{DistroPackage::Nix.by_internal_name[pkg[0]].version}</td><td>#{
      pkg[1].map{|version, updaters| "<span title=\"#{updaters.join(', ')}\">#{version}</span>"}.join(', ')
    }</td>" }

    haml :outdated, :locals => { :outdated_report => report }
end


get '/default.css' do
<<STYLE
body {
    background-color: #707070;
    margin: 0 10% 0 10%;
    font-family: "Nimbus Sans L", sans-serif;
}
div.header { overflow:hidden }
div.header div.name { font-weight: bold; float:left }
div.header div.links { float: right }
div.dashitem, div.header {
    margin: 0.5em;
    background-color: white;

    /* Put a rounded border around the page. */
    border: 1px solid black;
    padding: 1em;
    border-radius: 1em;
    border-radius: 1em;
    box-shadow: #404040 0px 5px 50px;
}
div.dashitem { float: left; }
div.dashitem th {
    border-bottom: dotted 1px;
}
a { text-decoration: none; }
a:hover { text-decoration: underline; }
a:link { color: #0048b3; }
a:visited { color: #002a6a; }
a.no-hover:hover { background: none; }
STYLE
end

__END__

@@dashboard

<link rel="stylesheet" href="/default.css" type="text/css" />

.header
  .name NixPkgs Monitor
  .links
    %a(href="http://github.com/phreedom/nixpkgs-monitor") source

.dashitem#coverage
  %span.header Coverage
  %table
    %tr
      %th Coverage
      %th Packages
    = coverage_report

.dashitem#maintainers
  %span.header Maintainers
  %table
    %tr
      %th Maintainers
      %th Packages
    = maintainer_report

.dashitem#needsattention
  %table
    = needsattention_report


@@coverage

<link rel="stylesheet" href="/default.css" type="text/css" />

.dashitem
  %table
    %tr
      %th Attr Path
      %th Estimated Coverage
      %th Maintainers
    = coverage_report


@@outdated

<link rel="stylesheet" href="/default.css" type="text/css" />

.dashitem
  %table
    %tr
      %th Attr Path
      %th Current
      %th New Version(s)
    = outdated_report